library(OptimalRDTinR)
hello()
library(OptimalRDTinR)
pi_MCSim_beta(5000,10,1,1)
pi_MCSim_dirichlet(1,10,c(1,1,1))[1,]
pi_MCSim_beta(5000,10,1,1)[1,]
pi_MCSim_beta(5000,10,1,1)[1]
pi_MCSim_beta(5000,10,1,1)
library(OptimalRDTinR)
?pi_MCSim_beta()
??pi_MCSim_beta()
library(OptimalRDTinR)
library(OptimalRDTinR)
install.packages("Rtools")
install.packages("Rtools")
library(gtools)
library(OptimalRDTinR)
?hello
install.packages("roxygen2")
install.packages("devtools")
library(OptimalRDTinR)
library(OptimalRDTinR)
setwd("G:/My Drive/Career_Development/Coding_Profiles/Github_Public/OptimalRDT_R/OptimalRDTinR")
devtools::document()
library(OptimalRDTinR)
library(OptimalRDTinR)
bIndicator(pi = 0.1, R = 0.9)
bIndicator(pi = 0.2, R = 0.9)
bIndicator(pi = 0.1, R = 0.9)
bIndicator <- function(pi,R){
if(pi <= 1-R)
return(1)
else
return(0)
}
bIndicator(pi = 0.1, R = 0.9)
bIndicator <- function(pi,R){
if(pi <= 1-R){
return(1)
}
else
return(0)
}
bIndicator(pi = 0.1, R = 0.9)
bIndicator(0.1, 0.9)
bIndicator()
?bIndicator()
devtools::document()
bIndicator(0.1, 0.9)
bIndicator(0.05, 0.9)
bIndicator(0.1, 0.9)
library(OptimalRDTinR)
bIndicator(0.1, 0.9)
pi = 0.1
R = 0.9
pi <= (1 - R)
0.1 <= (1 - 0.9)
0.1 <= 0.1
(1 - 0.9)
tmp = 1 - R
tmp
######define the indicator function
bIndicator <- function(pi,R){
tmp <- 1 - R
if(pi <= tmp){
return(1)
}
else
return(0)
}
bIndicator(0.1, 0.9)
######define the indicator function
bIndicator <- function(pi,R){
if(pi<=(1 - R)){
return(1)
}
else
return(0)
}
bIndicator(0.1, 0.9)
######define the indicator function
bIndicator <- function(pi,R){
if(pi<(1 - R)|pi==(1 - R)){
return(1)
}
else
return(0)
}
bIndicator(0.1, 0.9)
######define the indicator function
bIndicator <- function(pi, R){
if(pi<(1 - R)|pi==(1 - R)){
return(1)
}
else{
return(0)
}
}
bIndicator(0.1, 0.9)
pi<(1 - R)|pi==(1 - R)
######define the indicator function
bIndicator <- function(pi, R){
if(pi<(1 - R)|pi==(1 - R)){
return(1)
}
else{
return(0)
}
}
bIndicator(pi = 0.1, R = 0.9)
pi
######define the indicator function
bIndicator <- function(Pi, R){
if(Pi<(1 - R)|Pi==(1 - R)){
return(1)
}
else{
return(0)
}
}
bIndicator(pi = 0.1, R = 0.9)
bIndicator(Pi = 0.1, R = 0.9)
pi = 0.1
pi
R = 0.9
if(pi<(1 - R)|pi==(1 - R)){
return(1)
}
else{
return(0)
}
if(pi<(1 - R)|pi==(1 - R)){
print(1)
}
else{
print(0)
}
pi<(1 - R)|pi==(1 - R)
if(pi<(1 - R)|pi==(1 - R)){
print(1)
}else{
print(0)
}
if(pi<=(1 - R)){
print(1)
} else {
print(0)
}
if(pi<=(1-R)){
print(1)
} else {
print(0)
}
pi<=(1-R)
pi
0.1<=(1-0.9)
0.1<=(1.0-0.9)
1-0.9
0.1<=numeric(1.0-0.9)
0.1<=as.numeric(1-0.9)
0.1<=0.1
0.1==0.1
pi<(1-R)
pi==(1-R)
pi>(1-R)
pi
p = 0.1
p>(1-R)
0.1 > 0.1
help("<=")
pi <- 0.1
R <- 0.9
pi>(1-R)
(1-R)
pi
a = 0.1
b = 0.1
a <= b
b = 0.9
a <= 1 - b
a <= (1 - b)
1-b
b = 0.11
a = 0.11
b = 0.89
a <= (1 - b)
a
1-b
a = round(0.11,2)
b = round(0.89,2)
a <= (1 - b)
a
b
1-0.9
b = 0.9
b = 0.91
pi = 0.05
R = 0.9
bIndicator(pi = 0.05, R = 0.9)
######define the indicator function
bIndicator <- function(pi, R){
if(pi<=(1-R)){
print(1)
} else {
print(0)
}
}
######define the indicator function
bIndicator <- function(pi, R){
if(pi<=(1-R)){
return(1)
} else {
return(0)
}
}
bIndicator(pi = 0.05, R = 0.9)
library(OptimalRDTinR)
?bIndicator
?hello
?pi_MCSim_beta()
library(OptimalRDTinR)
?bIndicator
devtools::document()
?bIndicator
library(OptimalRDTinR)
?bIndicator
devtools::document()
?bIndicator
devtools::document()
?pi_MCSim_beta()
devtools::document()
?pi_MCSim_beta()
pi_MCSim_dirichlet(5000,10,c(1,1,1))
devtools::document()
?pi_MCSim_beta()
devtools::document()
library(OptimalRDTinR)
?bIndicator
bcore(10, 2, 0.2)
bcore <- function(n,c,pi){
return(sum(dbinom(c(0:c),n,pi)))
}
bcore(10, 2, 0.2)
bconsumerrisk <- function(n, c, pi, R){
tmp <- pbinom(c, n, pi)
sum1 <- t(matrix(tmp))%*%matrix(sapply(pi, bIndicator, R))
sum2 <- sum(tmp)
return(1 - sum1/sum2)
}
pi <- pi_MCSim_beta(5000,10,1,1)
bconsumerrisk(10, 2, pi, 0.8)
bproducerrisk <- function(n,c,pi,R){
tmp <- 1-pbinom(c,n,pi)
sum1<-t(matrix(tmp))%*%matrix(sapply(pi,bIndicator,R))
sum2<-sum(tmp)
return(sum1/sum2)
}
bproducerrisk(n = 10, c = 2, pi, R = 0.8)
bacceptprob <- function(n, c, pi){
return(mean(pbinom(c, n, pi)))
}
bacceptprob(n = 10, c = 2, pi = pi)
brejectprob(n = 10, c = 2, pi = pi)
brejectprob <- function(n, c, pi){
return(mean(1 - pbinom(c, n, pi)))
}
brejectprob(n = 10, c = 2, pi = pi)
?bcore
?OptimalRDTinR
??OptimalRDTinR
devtools::check()
pi_MCSim_dirichlet <- function(M, seed, par){
requireNamespace(gtools)
set.seed(seed)
return(rdirichlet(M, par))
}
pi_MCSim_dirichlet(M = 5000, seed = 10, par = c(1, 1, 1))
pi_MCSim_dirichlet <- function(M, seed, par){
requireNamespace(gtools, quietly = TRUE)
set.seed(seed)
return(rdirichlet(M, par))
}
pi_MCSim_dirichlet(M = 5000, seed = 10, par = c(1, 1, 1))
pi_MCSim_dirichlet <- function(M, seed, par){
requireNamespace("gtools", quietly = TRUE)
set.seed(seed)
return(rdirichlet(M, par))
}
pi_MCSim_dirichlet(M = 5000, seed = 10, par = c(1, 1, 1))
requireNamespace("gtools")
pi_MCSim_dirichlet(M = 5000, seed = 10, par = c(1, 1, 1))
pi_MCSim_dirichlet <- function(M, seed, par){
requireNamespace("gtools")
set.seed(seed)
return(rdirichlet(M, par))
}
pi_MCSim_dirichlet(M = 5000, seed = 10, par = c(1, 1, 1))
pi_MCSim_dirichlet <- function(M, seed, par){
requireNamespace("gtools")
set.seed(seed)
return(gtools::rdirichlet(M, par))
}
pi_MCSim_dirichlet(M = 5000, seed = 10, par = c(1, 1, 1))
0.4925217968 0.5730923335 0.9148640311
?rbeta
?pnorm
?pbinom
